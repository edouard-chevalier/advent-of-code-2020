using System;
using System.Collections.Generic;

namespace Day3
{
    class Program
    {
        private const string input = @"....##..#........##...#.#..#.##
.#.#..#....##....#...#..##.....
##.#..##..#...#..........##.#..
.#.##.####..#......###.........
#.#.#...........#.....#...#....
#.......#....#.#.##..###..##..#
.#...#...##....#.........#.....
..........##.#.#.....#....#.#..
.......##..##...#.#.#...#......
.#.#.#...#...##...#.##.##..#...
........##.#.#.###.........##..
#.#..#.#.#.....#...#...#......#
.#.#.#...##......#...#.........
.#..##.##.#...#...##....#.#....
.##...#..#..#......##.###....##
.....#...#.###.....#.#.........
#.##..#....#.#.#.#.............
........#...#......#...#..#....
##..##...##.##...#...#.###...##
#.#....##.#...###......#..#.#..
..#.....#.##......#..........#.
#.......#..#......#.....#....#.
.....###...........#....#.##...
#.#........##.......#.#...#.##.
.#.#.#........#........#.#.....
#..#..##.....#.###..#.#.#.##..#
..#.#...#..##.#.#.#.......###..
........#........#..#..#...#...
##............#...#..##.##...#.
#....#.#.....##...#............
............#...#..#.#.#....#..
#.#.#...##.##.#....#....#......
................###.....#.....#
##.#####.#..#...###..#...###...
...#.....#...#.#....#...#..#...
.......#....##.##.#.##.........
..#..#..##.....#...#.#.....#...
...#...#.#.##.#..###.......#...
...#...........#.#####..##..#..
#.#...#........####..#......#.#
#..#.##...........#.#......#.##
#.#..#....##..#..##.#..........
.....#..#.....#........##..#...
...###.......#.##.......#......
...##..#..#...#....#.###...#...
....####....#........#.##.#.#.#
#....#.....#.###.##...##..##.##
.##.#...#.##.#......#..##.#....
...#.............#.............
..##..##.#.....#........##....#
#.....#....#.......####...#..#.
..#...#..#...#...##.#....##....
.#...##....#....#..#....#......
##..#.#...##......#..#.......##
..#...#.##..#.....#.#...#..#.#.
#..##....#..........#..........
.#........#..#......#......#.#.
...##.#.........#.#....#.#...#.
#.....#.#..#...#...#..#...#...#
#.........#.#.........##.......
.#.......#......#.........###..
.#..#..##...........#.....#..#.
.#....................#.....#..
.##.....#....#....#.###.....#..
...##.#.....#.#....#.........#.
.........##.....#.....#.##..#..
......#......#.#..#..###...#..#
..##...#.#..#...#.#....#.......
..#..##.###.#..#..#..#......#..
.....##...##.........#...##...#
###.#..##....##...##.#..###....
#...#.#..##......##...#.#..#...
..........#....###....#........
#.#.#.#.#.....#..##.##.....#...
.##.....#...#.....#......#.....
.#..........#.#.............#..
.#..##..#.#..##...#....#.##...#
..#.#..........#...#..........#
.#.......#.......#...#..#.....#
##.#...##...#......#.#..#......
#####..#....#..#...#...#.#.....
....#.......#.#..#.............
#..#..#.#.####...#....#....##..
#..#.##.#......#...#......#....
#...##.##...#....#..........##.
..#..#.......##.#....#...#.#...
.....#.##..............##.....#
..##.##...##.....#.........#.#.
.#....##...##...##..#....##..#.
.#...#....#..#......#.#........
#....#.#.#..............#....##
..##..#..#....#####.#....#.#.##
#....#...#.##..#.##.........###
#..#..#....#...............#.#.
#....##...##........##.##.#.##.
......#......##....##.....#.###
#...##..#..#.....#.#........##.
..#.#.##...#...#....#..###...#.
#..##..#.###..##.#.#....#......
..###..#.##........###.....#...
#.............#.............#..
.#.##....#..##.#...#....#.#####
###.....###.#......##..#..##...
.#.#......##.#....#....#.#..#..
###..#..#....#......###.##.....
......#.......#......#..##..##.
..#..#...#..#....#.##....#.#..#
.......##..#........#.#.##.....
.#...#..#........#..#.#..#..#.#
.#..#.##.......#......#...#.#..
.##..##......##.#...#......####
.....#....#......#.....#......#
..........#.#.#...##.#..#.#....
...#.......##......#..#.#.##...
.###..#.#.#....................
##...#...#.##............#.....
....#....#.##...#..#.#...##....
..#.#....#.###...#...#.#.####.#
..#..#.#...#.#......##.........
#..#..####.##.#.#..###....#...#
....#..........#.##.#..#.#.#.#.
#.#.##.........#.....##...#..##
#......#...#.##.#......#..#.#..
#...#........#..#..#...##...#..
.....#.####..##..#.#.##..#...#.
#..#........#........#...#....#
...........#..#.....#.#.#.#....
....#......#....#...#....##....
.#.#..#...#.#....#..#.#....##.#
....#...#...#.##..#...#..##...#
#######...............##.....##
.#.#..............#....#..#.###
#......#.#......###....###.....
##..#...#.##..##..##.#....#....
#....##..#..#...#.#.#...#......
..........#..#.##..##.##.#..##.
....#.#.#.....##........#..#...
..###...#.....##.##.....##..##.
....#.#..#.#.......#.......#...
..##.#..#.....##...###...#...#.
..#.........#...##...#...#..#..
..#..#..#..#..##.#...##..#.#...
...##..#..##..#..####...#.....#
............#............###...
.#.#.###.#.....#.#.#..#.###..#.
...#.........#.....####........
....##.#..##.#.............#...
....#.##.....#..#.....#......##
..........#.............#...##.
#..#.....#.......##..###.......
..##.#...........#.......#..#..
...#...#.#.##.###....#.#..#....
...#..........##..#..#..#...###
.........#.....#..##.....#..#..
#........#...#...#..#.#....##..
.#.#.....####..#.##.#..........
###.......##..#.##...#.....#...
..###.##.#..#..#..#.....##...#.
.........#.....##.#..#..##.....
#..#..##...###..............#..
#....#.#....#..#.....#..####...
####..#.....##...#..#.#.#.#...#
...#....#.....#.##.#.#.#....##.
..........#...#.....###....#.##
#....#.#.#....#..#..#.....#....
.....#.#...#......#....#......#
.####....##...#...#......##..#.
.#...#..#....#..#..............
##.#...##...#.##..#......#.....
..####.##..#....#.#......#.#.##
........#.....##...#.#..##....#
....#.#.#.#.###...#.#...##...##
#.....#...####.#....#.#........
..#.....#...##.........###.....
....#....#....#..#......#####.#
###.....#..#.#.#......#.##.#...
....#.##......#..#.#...........
.#....#....#.#..#.......#...##.
...................#.#.#..#....
##...#.....#........#....#...#.
........##......#...##.#..#.#.#
#.#..###...#....#.#...#.......#
#..........##......#..#..#.....
.............#...##.#...#......
#..#....##..#.........#..#.###.
.....#..........#....##.#...##.
###....................#.#.##..
#........##...##......#....###.
#....#.............#....#...#..
##.......##.#.......#....#..#..
##...#............#..#.#....##.
..#.#..#...#####..........#....
..#.........##.....#.#...####..
....#..............#...........
..#...#.#.#..#.......##.#.#.#..
....#.##.....##..#.....#..####.
#...#...#...#.......#.........#
......#..#.####...###.#.#.....#
.......#..#..#.....#.#..##.#..#
.#......##..#............#.....
.#........#.#....#....#........
.....#.#..#.##.#..##....#..#...
#.#...........#....##.....#....
..#..#..##.###..##..#..###.#.##
##.#..#...##.#.........#...#.#.
......#..#..##...#....#...#.##.
#.##.......................#...
.......#..#..#.##..##......#...
..#.#...#.....#..###....#...#..
##..#.....#..#..#.##.....#...##
#...##...###...#.#..###....#...
...#.#.#..####.....#...##....#.
.#.#..##.....#..#.....##..##..#
#...#..........#.##.#.#........
..##....#.##....#..##......#...
....#..........###.....####..##
...........###....##.#.#.#.#...
...#......................####.
#.#.#...#.#.#.#.#......#.....##
..###...#.####...#..##..#....#.
....#....#.......#...#.........
.#.###.............##..#...#...
....#.#....##...#.....#.##.....
#.......##.....#.#.....#....##.
....##.....###..#.#..#....#...#
......#..##...#......#.....#.##
.#.....#.##.###....#.....#..###
...#..#.###.#....#..#..#...##.#
...##..#...#..#.#.#..#...#.....
##.####...##..#.#.#....#.......
..##..#.#.......##.#......##.#.
....##....#....#..#....#..##.#.
..##..........##....#...#.#..#.
#.#...#.#.###.#.#..##.#...#....
.....#..#.............#...#...#
....#.#..#...##...#....#.##....
#..#...#.###.....#...#.....#.#.
#####....#....#....#.......#.##
#...##....##.#.#...#.....##.#..
#.......#...#..#..#...#....#...
....#......#.#..........#....##
#.###...#.#..##..#.##........#.
#..#.....##.......#..#..#.#....
...#...#.##...#....#.#.#.#...#.
...##..#.#....#......###......#
#.#....#...#..#..#....#........
..#..#.#...##..........#.###...
#..........#...#..#....#....###
..#..#.#....#..............#...
...#........#...#.#....###.#..#
....#.#.#................#..#.#
..#........##.#....#.#..#......
...##..#..#.......#..#......#.#
..#..#....#.........#....#.##..
#.....#....###.#..#..#...#...#.
..#..##.###.#..##....#.###.....
...#...####..#........###.#....
.........#.#...#..#..#.#.......
.##.........##.#..............#
..#.#.#.....###........#.#.#..#
....##..#....#....#.#..#.......
#.#.....#...#........##........
.##.#.#..#..#.#.#.........#....
#.....#..#.##...#...#..........
##..#....#....##.#..#.........#
................#.##.#......#.#
..#..#.#........##...###..#...#
##........#.......#...##.##..#.
##....#.....#..##....#.......#.
#.#....#.#........#..#.........
......##......#...#.....#.##...
###....#..........##.#.#......#
......#...###.........###..#...
.####....#...##..#.#.....#...#.
.##...#...###....#...#.#..###..
#..#......##...#.###..###...#..
#....#.#.#..#....##...#.##..#..
..#.....#...#..........#.##.###
#.....#....###.......##..##.#..
#..##...#..#....#.###......#...
#..#........##..#.....#.#.#....
#.##.#.#..#....#.#.............
.#...............#....##.......
.#.##......##........#...#..#.#
.#...#....#....#...#..#...##...
.....#..###...##........#.#....
...#.......#....##..#..#....#..
...###....#........#..#.###.#..
......##..##..............###.#
.......#.####..##....#.#....#..
#...#......#...#..#.....##....#
.#..#..###....#..##.##.#.......
#......##......#..##....#..##..
.....#..#.#......##.##..##.....
...#..#.......#......#.........
....#..####......#..#....#...#.
..#.#..#...#....#....#.......#.
####..#........#.###...##.#.#.#
.......##........#.#.#...##....
...#.........#..#.#..##....#...
.....#..#...#.#....#...#.#.##.#
#..##.....#.....##.......#...#.
.......##.#.#.....#....#......#
...#...#.##...#......#....#....
..#..#.#...#..#.....#...###.#..
.........#...#..#.......##.....
..##...................#..#.###
.##.##..#.#...#.#....#.....##..
#.#...##...#...#...##..#......#
....#..#...#.....##.#.....#..##
##.#..........###..#...#..#....
...##....#.##....#......#......
.....#.........#....#.#.......#
.......#............#.#.....#..
..#..#...#..#####..#....##.....
...##......##...#.#........##..
.....#..###...##.#.#.##.#...#..
..#.#.#..##..#.##...##.#.#.....
......##...#..##......#.#......
......................#........
#...#..#....#..#.#.##.#.....#.#
.#......#.#....#.#.#..#....#...
.#..#.#.#..#....#..............
";
        private const string test = @"..##.......
#...#...#..
.#....#..#.
..#.#...#.#
.#...##..#.
..#.##.....
.#.#.#....#
.#........#
#.##...#...
#...##....#
.#..#...#.#";
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
            exo2();
        }

        static void exo1()
        {
            string[] lines = input.Split("\r\n", StringSplitOptions.RemoveEmptyEntries);
            var trees = new HashSet<Position>();

            for (int y = 0; y < lines.Length; y++) {
                for (int x = 0; x < lines[y].Length; x++) {
                    if (lines[y][x] == '#')
                    {
                        trees.Add(new Position(x, y));
                    }
                }
            }

            int modulo = lines[0].Length;
            int nbTrees = 0;
            int currentX = 0;
            for (int currentY = 0; currentY < lines.Length; currentY++) {
                if (trees.Contains(new Position(currentX % modulo, currentY)))
                {
                    nbTrees++;
                }
                currentX += 3;
            }

            Console.Out.WriteLine(nbTrees);

        }
        static void exo2()
        {
            string[] lines = input.Split("\r\n", StringSplitOptions.RemoveEmptyEntries);
            var trees = new HashSet<Position>();

            for (int y = 0; y < lines.Length; y++) {
                for (int x = 0; x < lines[y].Length; x++) {
                    if (lines[y][x] == '#')
                    {
                        trees.Add(new Position(x, y));
                    }
                }
            }

            int modulo = lines[0].Length;

            void NewFunction( int stepX, int stepY)
            {
                int nbTrees = 0;
                int currentX = 0;
                for (int currentY = 0; currentY < lines.Length; currentY+=stepY)
                {
                    if (trees.Contains(new Position(currentX % modulo, currentY)))
                    {
                        nbTrees++;
                    }

                    currentX += stepX;
                }

                Console.Out.WriteLine(nbTrees);
            }

            NewFunction(1,1);
            NewFunction(1,2);
            NewFunction(3,1);
            NewFunction(5,1);
            NewFunction(7,1);
        }

        public readonly struct Position: IEquatable<Position> {
            public Position(int x, int y) {
                X = x;
                Y = y;
            }

            public int X { get; }
            public int Y { get; }

            public bool Equals(Position other)
            {
                return X == other.X && Y == other.Y;
            }

            public override bool Equals(object obj)
            {
                return obj is Position other && Equals(other);
            }

            public override int GetHashCode()
            {
                unchecked
                {
                    return (X * 397) ^ Y;
                }
            }
        }
    }
}